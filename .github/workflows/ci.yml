name: "CI/CD - Terraform Deploy"

on:
  push:
    branches:
      - main
      - poc
      - dev
      - staging
      - prod

env:
  TF_WORKING_DIR: infra
  AWS_REGION:    ap-southeast-1

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init \
          -backend-config="bucket=${{ secrets.STATE_BUCKET }}" \
          -backend-config="key=${{ github.ref_name }}/terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}" \
          -backend-config="dynamodb_table=${{ secrets.LOCK_TABLE }}"

      - name: Select or Create Workspace
        run: |
          terraform workspace select ${GITHUB_REF_NAME} || \
          terraform workspace new ${GITHUB_REF_NAME}

      - name: Terraform Fmt
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: OPA Policy Check (stub)
        run: |
          echo "::notice::(OPA) Running policy-as-code checks (stub)"
          # In future: download OPA and run `opa test policies/`

      - name: tfsec Scan
        uses: aquasecurity/tfsec-action@v1

      - name: Checkov Scan
        uses: bridgecrewio/checkov-action@v12

      - name: Terraform Plan
        id: plan
        run: terraform plan -var="environment=${GITHUB_REF_NAME}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' || github.ref_name == 'poc'
        run: terraform apply -auto-approve -var="environment=${GITHUB_REF_NAME}"
